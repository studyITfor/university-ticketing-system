warning: in the working copy of 'Dockerfile', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/Dockerfile b/Dockerfile[m
[1mindex 999d81f..6aceb01 100644[m
[1m--- a/Dockerfile[m
[1m+++ b/Dockerfile[m
[36m@@ -5,11 +5,12 @@[m [mFROM node:lts[m
 # Create and change to the app directory.[m
 WORKDIR /app[m
 [m
[31m-# Copy package files[m
[32m+[m[32m# Copy package files first for better Docker layer caching[m
 COPY package*.json ./[m
 [m
[31m-# Install packages[m
[31m-RUN npm ci --only=production[m
[32m+[m[32m# Install production dependencies only[m
[32m+[m[32m# Using npm install --omit=dev --frozen-lockfile for better compatibility with Railway[m
[32m+[m[32mRUN npm install --omit=dev --frozen-lockfile --no-audit --no-fund[m
 [m
 # Copy local code to the container image[m
 COPY . ./[m
[36m@@ -17,8 +18,15 @@[m [mCOPY . ./[m
 # Create necessary directories[m
 RUN mkdir -p tickets[m
 [m
[32m+[m[32m# Set production environment[m
[32m+[m[32mENV NODE_ENV=production[m
[32m+[m
 # Expose the port the app runs on[m
 EXPOSE 3000[m
 [m
[32m+[m[32m# Health check[m
[32m+[m[32mHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \[m
[32m+[m[32m  CMD node -e "require('http').get('http://localhost:3000/api/test/socket-info', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"[m
[32m+[m
 # Serve the app[m
 CMD ["npm", "start"][m
